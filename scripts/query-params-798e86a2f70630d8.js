var base64Decode=(a=>{let d=4;const b=a.replace(/-/g,`+`).replace(/_/g,`/`).padEnd(a.length+ (d- a.length%d)%d,`=`);const c=atob(b);return Uint8Array.from([...c].map(a=>a.charCodeAt(0)))});var decodeAndInflate=(a=>{const b=base64Decode(a);const c=pako.inflate(b,{raw:!0});return new TextDecoder().decode(c)});var deflateAndEncode=(a=>{const b=new TextEncoder().encode(a);const c=pako.deflate(b,{raw:!0});return base64UrlEncode(c)});var updateQueryParam=((a,b)=>{let d=null;const c=new URL(window.location);if(b===d){c.searchParams.delete(a)}else{c.searchParams.set(a,b)};history.replaceState(d,``,c)});var updateCodeAndCanvas=((a,b)=>{const c=new URLSearchParams(window.location.search);const d=c.get(`code`);const e=c.get(`canvas`);if(d){try{let b=decodeAndInflate(d);a.setValue(b,-1)}catch(a){console.warn(`Invalid compressed code in ?code`,a)}};if(e){try{b.value=decodeAndInflate(e)}catch(a){console.warn(`Invalid compressed buffer in ?canvas`,a)}}});var base64UrlEncode=(a=>{let c=``;const b=Array.from(a,a=>String.fromCharCode(a)).join(c);return btoa(b).replace(/\+/g,`-`).replace(/\//g,`_`).replace(/=+$/,c)})